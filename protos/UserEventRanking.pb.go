// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: UserEventRanking.proto

package UserEventRanking

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckId         *uint32  `protobuf:"varint,1,opt,name=deckId" json:"deckId,omitempty"`
	DeckName       *string  `protobuf:"bytes,2,opt,name=deckName" json:"deckName,omitempty"`
	Leader         *uint32  `protobuf:"varint,3,opt,name=leader" json:"leader,omitempty"`
	Member1        *uint32  `protobuf:"varint,4,opt,name=member1" json:"member1,omitempty"`
	Member2        *uint32  `protobuf:"varint,5,opt,name=member2" json:"member2,omitempty"`
	Member3        *uint32  `protobuf:"varint,6,opt,name=member3" json:"member3,omitempty"`
	Member4        *uint32  `protobuf:"varint,7,opt,name=member4" json:"member4,omitempty"`
	BondsEffectIds []uint32 `protobuf:"varint,8,rep,name=bondsEffectIds" json:"bondsEffectIds,omitempty"`
}

func (x *UserDeck) Reset() {
	*x = UserDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeck) ProtoMessage() {}

func (x *UserDeck) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeck.ProtoReflect.Descriptor instead.
func (*UserDeck) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{0}
}

func (x *UserDeck) GetDeckId() uint32 {
	if x != nil && x.DeckId != nil {
		return *x.DeckId
	}
	return 0
}

func (x *UserDeck) GetDeckName() string {
	if x != nil && x.DeckName != nil {
		return *x.DeckName
	}
	return ""
}

func (x *UserDeck) GetLeader() uint32 {
	if x != nil && x.Leader != nil {
		return *x.Leader
	}
	return 0
}

func (x *UserDeck) GetMember1() uint32 {
	if x != nil && x.Member1 != nil {
		return *x.Member1
	}
	return 0
}

func (x *UserDeck) GetMember2() uint32 {
	if x != nil && x.Member2 != nil {
		return *x.Member2
	}
	return 0
}

func (x *UserDeck) GetMember3() uint32 {
	if x != nil && x.Member3 != nil {
		return *x.Member3
	}
	return 0
}

func (x *UserDeck) GetMember4() uint32 {
	if x != nil && x.Member4 != nil {
		return *x.Member4
	}
	return 0
}

func (x *UserDeck) GetBondsEffectIds() []uint32 {
	if x != nil {
		return x.BondsEffectIds
	}
	return nil
}

type UserSituation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         *uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SituationId    *uint32 `protobuf:"varint,2,opt,name=situationId" json:"situationId,omitempty"`
	Level          *uint32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	Exp            *uint32 `protobuf:"varint,4,opt,name=exp" json:"exp,omitempty"`
	CreatedAt      *uint64 `protobuf:"varint,5,opt,name=createdAt" json:"createdAt,omitempty"`
	AddExp         *uint32 `protobuf:"varint,6,opt,name=addExp" json:"addExp,omitempty"`
	TrainingStatus *string `protobuf:"bytes,7,opt,name=trainingStatus" json:"trainingStatus,omitempty"`
	DuplicateCount *uint32 `protobuf:"varint,8,opt,name=duplicateCount" json:"duplicateCount,omitempty"`
	Illust         *string `protobuf:"bytes,9,opt,name=illust" json:"illust,omitempty"`
	SkillExp       *uint32 `protobuf:"varint,10,opt,name=skillExp" json:"skillExp,omitempty"`
	SkillLevel     *uint32 `protobuf:"varint,11,opt,name=skillLevel" json:"skillLevel,omitempty"`
}

func (x *UserSituation) Reset() {
	*x = UserSituation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSituation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSituation) ProtoMessage() {}

func (x *UserSituation) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSituation.ProtoReflect.Descriptor instead.
func (*UserSituation) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{1}
}

func (x *UserSituation) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserSituation) GetSituationId() uint32 {
	if x != nil && x.SituationId != nil {
		return *x.SituationId
	}
	return 0
}

func (x *UserSituation) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *UserSituation) GetExp() uint32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *UserSituation) GetCreatedAt() uint64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *UserSituation) GetAddExp() uint32 {
	if x != nil && x.AddExp != nil {
		return *x.AddExp
	}
	return 0
}

func (x *UserSituation) GetTrainingStatus() string {
	if x != nil && x.TrainingStatus != nil {
		return *x.TrainingStatus
	}
	return ""
}

func (x *UserSituation) GetDuplicateCount() uint32 {
	if x != nil && x.DuplicateCount != nil {
		return *x.DuplicateCount
	}
	return 0
}

func (x *UserSituation) GetIllust() string {
	if x != nil && x.Illust != nil {
		return *x.Illust
	}
	return ""
}

func (x *UserSituation) GetSkillExp() uint32 {
	if x != nil && x.SkillExp != nil {
		return *x.SkillExp
	}
	return 0
}

func (x *UserSituation) GetSkillLevel() uint32 {
	if x != nil && x.SkillLevel != nil {
		return *x.SkillLevel
	}
	return 0
}

type UserProfileSituation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                     *uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SituationId                *uint32 `protobuf:"varint,2,opt,name=situationId" json:"situationId,omitempty"`
	Illust                     *string `protobuf:"bytes,3,opt,name=illust" json:"illust,omitempty"`
	ViewProfileSituationStatus *string `protobuf:"bytes,4,opt,name=viewProfileSituationStatus" json:"viewProfileSituationStatus,omitempty"`
}

func (x *UserProfileSituation) Reset() {
	*x = UserProfileSituation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileSituation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileSituation) ProtoMessage() {}

func (x *UserProfileSituation) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileSituation.ProtoReflect.Descriptor instead.
func (*UserProfileSituation) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{2}
}

func (x *UserProfileSituation) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserProfileSituation) GetSituationId() uint32 {
	if x != nil && x.SituationId != nil {
		return *x.SituationId
	}
	return 0
}

func (x *UserProfileSituation) GetIllust() string {
	if x != nil && x.Illust != nil {
		return *x.Illust
	}
	return ""
}

func (x *UserProfileSituation) GetViewProfileSituationStatus() string {
	if x != nil && x.ViewProfileSituationStatus != nil {
		return *x.ViewProfileSituationStatus
	}
	return ""
}

type UserProfileDegree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            *uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	ProfileDegreeType *string `protobuf:"bytes,2,opt,name=profileDegreeType" json:"profileDegreeType,omitempty"`
	DegreeId          *uint32 `protobuf:"varint,3,opt,name=degreeId" json:"degreeId,omitempty"`
}

func (x *UserProfileDegree) Reset() {
	*x = UserProfileDegree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileDegree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileDegree) ProtoMessage() {}

func (x *UserProfileDegree) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileDegree.ProtoReflect.Descriptor instead.
func (*UserProfileDegree) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{3}
}

func (x *UserProfileDegree) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserProfileDegree) GetProfileDegreeType() string {
	if x != nil && x.ProfileDegreeType != nil {
		return *x.ProfileDegreeType
	}
	return ""
}

func (x *UserProfileDegree) GetDegreeId() uint32 {
	if x != nil && x.DegreeId != nil {
		return *x.DegreeId
	}
	return 0
}

type UserProfileDegreeMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]*UserProfileDegree `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *UserProfileDegreeMap) Reset() {
	*x = UserProfileDegreeMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileDegreeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileDegreeMap) ProtoMessage() {}

func (x *UserProfileDegreeMap) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileDegreeMap.ProtoReflect.Descriptor instead.
func (*UserProfileDegreeMap) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{4}
}

func (x *UserProfileDegreeMap) GetEntries() map[string]*UserProfileDegree {
	if x != nil {
		return x.Entries
	}
	return nil
}

type RankingUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 *string               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OwnFlg               *bool                 `protobuf:"varint,2,opt,name=ownFlg" json:"ownFlg,omitempty"`
	RankLevel            *uint32               `protobuf:"varint,3,opt,name=rankLevel" json:"rankLevel,omitempty"`
	Introduction         *string               `protobuf:"bytes,4,opt,name=introduction" json:"introduction,omitempty"`
	Rank                 *uint32               `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
	Point                *uint64               `protobuf:"varint,6,opt,name=point" json:"point,omitempty"`
	UserId               *uint64               `protobuf:"varint,7,opt,name=userId" json:"userId,omitempty"`
	DegreeId             *uint32               `protobuf:"varint,8,opt,name=degreeId" json:"degreeId,omitempty"`
	UserDeck             *UserDeck             `protobuf:"bytes,9,opt,name=userDeck" json:"userDeck,omitempty"`
	UserSituationList    []*UserSituation      `protobuf:"bytes,10,rep,name=userSituationList" json:"userSituationList,omitempty"`
	UserProfileSituation *UserProfileSituation `protobuf:"bytes,11,opt,name=userProfileSituation" json:"userProfileSituation,omitempty"`
	UserProfileDegreeMap *UserProfileDegreeMap `protobuf:"bytes,12,opt,name=userProfileDegreeMap" json:"userProfileDegreeMap,omitempty"`
}

func (x *RankingUser) Reset() {
	*x = RankingUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankingUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankingUser) ProtoMessage() {}

func (x *RankingUser) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankingUser.ProtoReflect.Descriptor instead.
func (*RankingUser) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{5}
}

func (x *RankingUser) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RankingUser) GetOwnFlg() bool {
	if x != nil && x.OwnFlg != nil {
		return *x.OwnFlg
	}
	return false
}

func (x *RankingUser) GetRankLevel() uint32 {
	if x != nil && x.RankLevel != nil {
		return *x.RankLevel
	}
	return 0
}

func (x *RankingUser) GetIntroduction() string {
	if x != nil && x.Introduction != nil {
		return *x.Introduction
	}
	return ""
}

func (x *RankingUser) GetRank() uint32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *RankingUser) GetPoint() uint64 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *RankingUser) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *RankingUser) GetDegreeId() uint32 {
	if x != nil && x.DegreeId != nil {
		return *x.DegreeId
	}
	return 0
}

func (x *RankingUser) GetUserDeck() *UserDeck {
	if x != nil {
		return x.UserDeck
	}
	return nil
}

func (x *RankingUser) GetUserSituationList() []*UserSituation {
	if x != nil {
		return x.UserSituationList
	}
	return nil
}

func (x *RankingUser) GetUserProfileSituation() *UserProfileSituation {
	if x != nil {
		return x.UserProfileSituation
	}
	return nil
}

func (x *RankingUser) GetUserProfileDegreeMap() *UserProfileDegreeMap {
	if x != nil {
		return x.UserProfileDegreeMap
	}
	return nil
}

type RankingUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*RankingUser `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *RankingUserList) Reset() {
	*x = RankingUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankingUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankingUserList) ProtoMessage() {}

func (x *RankingUserList) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankingUserList.ProtoReflect.Descriptor instead.
func (*RankingUserList) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{6}
}

func (x *RankingUserList) GetEntries() []*RankingUser {
	if x != nil {
		return x.Entries
	}
	return nil
}

type UserChallengeMusicRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId        *uint32          `protobuf:"varint,1,opt,name=musicId" json:"musicId,omitempty"`
	ScoreNearUsers *RankingUserList `protobuf:"bytes,2,opt,name=scoreNearUsers" json:"scoreNearUsers,omitempty"`
	ScoreTopUsers  *RankingUserList `protobuf:"bytes,3,opt,name=scoreTopUsers" json:"scoreTopUsers,omitempty"`
}

func (x *UserChallengeMusicRankingResponse) Reset() {
	*x = UserChallengeMusicRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChallengeMusicRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChallengeMusicRankingResponse) ProtoMessage() {}

func (x *UserChallengeMusicRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChallengeMusicRankingResponse.ProtoReflect.Descriptor instead.
func (*UserChallengeMusicRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{7}
}

func (x *UserChallengeMusicRankingResponse) GetMusicId() uint32 {
	if x != nil && x.MusicId != nil {
		return *x.MusicId
	}
	return 0
}

func (x *UserChallengeMusicRankingResponse) GetScoreNearUsers() *RankingUserList {
	if x != nil {
		return x.ScoreNearUsers
	}
	return nil
}

func (x *UserChallengeMusicRankingResponse) GetScoreTopUsers() *RankingUserList {
	if x != nil {
		return x.ScoreTopUsers
	}
	return nil
}

type UserChallengeEventRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventPointNearUsers    *RankingUserList                     `protobuf:"bytes,1,opt,name=eventPointNearUsers" json:"eventPointNearUsers,omitempty"`
	EventPointTopUsers     *RankingUserList                     `protobuf:"bytes,2,opt,name=eventPointTopUsers" json:"eventPointTopUsers,omitempty"`
	ChallengeMusicRankings []*UserChallengeMusicRankingResponse `protobuf:"bytes,101,rep,name=challengeMusicRankings" json:"challengeMusicRankings,omitempty"`
}

func (x *UserChallengeEventRankingResponse) Reset() {
	*x = UserChallengeEventRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChallengeEventRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChallengeEventRankingResponse) ProtoMessage() {}

func (x *UserChallengeEventRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChallengeEventRankingResponse.ProtoReflect.Descriptor instead.
func (*UserChallengeEventRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{8}
}

func (x *UserChallengeEventRankingResponse) GetEventPointNearUsers() *RankingUserList {
	if x != nil {
		return x.EventPointNearUsers
	}
	return nil
}

func (x *UserChallengeEventRankingResponse) GetEventPointTopUsers() *RankingUserList {
	if x != nil {
		return x.EventPointTopUsers
	}
	return nil
}

func (x *UserChallengeEventRankingResponse) GetChallengeMusicRankings() []*UserChallengeMusicRankingResponse {
	if x != nil {
		return x.ChallengeMusicRankings
	}
	return nil
}

type UserLiveTryEventRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NearUsers *RankingUserList `protobuf:"bytes,1,opt,name=nearUsers" json:"nearUsers,omitempty"`
	TopUsers  *RankingUserList `protobuf:"bytes,2,opt,name=topUsers" json:"topUsers,omitempty"`
}

func (x *UserLiveTryEventRankingResponse) Reset() {
	*x = UserLiveTryEventRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLiveTryEventRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLiveTryEventRankingResponse) ProtoMessage() {}

func (x *UserLiveTryEventRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLiveTryEventRankingResponse.ProtoReflect.Descriptor instead.
func (*UserLiveTryEventRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{9}
}

func (x *UserLiveTryEventRankingResponse) GetNearUsers() *RankingUserList {
	if x != nil {
		return x.NearUsers
	}
	return nil
}

func (x *UserLiveTryEventRankingResponse) GetTopUsers() *RankingUserList {
	if x != nil {
		return x.TopUsers
	}
	return nil
}

type UserMissionLiveEventRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NearUsers *RankingUserList `protobuf:"bytes,1,opt,name=nearUsers" json:"nearUsers,omitempty"`
	TopUsers  *RankingUserList `protobuf:"bytes,2,opt,name=topUsers" json:"topUsers,omitempty"`
}

func (x *UserMissionLiveEventRankingResponse) Reset() {
	*x = UserMissionLiveEventRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMissionLiveEventRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMissionLiveEventRankingResponse) ProtoMessage() {}

func (x *UserMissionLiveEventRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMissionLiveEventRankingResponse.ProtoReflect.Descriptor instead.
func (*UserMissionLiveEventRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{10}
}

func (x *UserMissionLiveEventRankingResponse) GetNearUsers() *RankingUserList {
	if x != nil {
		return x.NearUsers
	}
	return nil
}

func (x *UserMissionLiveEventRankingResponse) GetTopUsers() *RankingUserList {
	if x != nil {
		return x.TopUsers
	}
	return nil
}

type UserVersusMusicRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId        *uint32          `protobuf:"varint,1,opt,name=musicId" json:"musicId,omitempty"`
	ScoreNearUsers *RankingUserList `protobuf:"bytes,2,opt,name=scoreNearUsers" json:"scoreNearUsers,omitempty"`
	ScoreTopUsers  *RankingUserList `protobuf:"bytes,3,opt,name=scoreTopUsers" json:"scoreTopUsers,omitempty"`
}

func (x *UserVersusMusicRankingResponse) Reset() {
	*x = UserVersusMusicRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVersusMusicRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVersusMusicRankingResponse) ProtoMessage() {}

func (x *UserVersusMusicRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVersusMusicRankingResponse.ProtoReflect.Descriptor instead.
func (*UserVersusMusicRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{11}
}

func (x *UserVersusMusicRankingResponse) GetMusicId() uint32 {
	if x != nil && x.MusicId != nil {
		return *x.MusicId
	}
	return 0
}

func (x *UserVersusMusicRankingResponse) GetScoreNearUsers() *RankingUserList {
	if x != nil {
		return x.ScoreNearUsers
	}
	return nil
}

func (x *UserVersusMusicRankingResponse) GetScoreTopUsers() *RankingUserList {
	if x != nil {
		return x.ScoreTopUsers
	}
	return nil
}

type UserVersusEventRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventPointNearUsers *RankingUserList                  `protobuf:"bytes,1,opt,name=eventPointNearUsers" json:"eventPointNearUsers,omitempty"`
	EventPointTopUsers  *RankingUserList                  `protobuf:"bytes,2,opt,name=eventPointTopUsers" json:"eventPointTopUsers,omitempty"`
	VersusMusicRankings []*UserVersusMusicRankingResponse `protobuf:"bytes,3,rep,name=versusMusicRankings" json:"versusMusicRankings,omitempty"`
}

func (x *UserVersusEventRankingResponse) Reset() {
	*x = UserVersusEventRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UserEventRanking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVersusEventRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVersusEventRankingResponse) ProtoMessage() {}

func (x *UserVersusEventRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_UserEventRanking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVersusEventRankingResponse.ProtoReflect.Descriptor instead.
func (*UserVersusEventRankingResponse) Descriptor() ([]byte, []int) {
	return file_UserEventRanking_proto_rawDescGZIP(), []int{12}
}

func (x *UserVersusEventRankingResponse) GetEventPointNearUsers() *RankingUserList {
	if x != nil {
		return x.EventPointNearUsers
	}
	return nil
}

func (x *UserVersusEventRankingResponse) GetEventPointTopUsers() *RankingUserList {
	if x != nil {
		return x.EventPointTopUsers
	}
	return nil
}

func (x *UserVersusEventRankingResponse) GetVersusMusicRankings() []*UserVersusMusicRankingResponse {
	if x != nil {
		return x.VersusMusicRankings
	}
	return nil
}

var File_UserEventRanking_proto protoreflect.FileDescriptor

var file_UserEventRanking_proto_rawDesc = []byte{
	0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x33,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x33, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x34, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x6f, 0x6e,
	0x64, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0e, 0x62, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x22, 0xcb, 0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x45, 0x78, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x64, 0x64, 0x45, 0x78, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6c, 0x6c, 0x75, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6c, 0x6c,
	0x75, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x78, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0xa8, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x76, 0x69,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x74, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x75, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x49,
	0x64, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4d,
	0x61, 0x70, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd4, 0x03, 0x0a, 0x0b, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x77, 0x6e, 0x46, 0x6c, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x77,
	0x6e, 0x46, 0x6c, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x74,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x74, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x70, 0x22,
	0x39, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x21, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x4e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x61, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x85, 0x02, 0x0a,
	0x21, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x65, 0x61,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x7f, 0x0a, 0x1f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x76, 0x65,
	0x54, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x65, 0x61, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6e, 0x65,
	0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x74, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x09, 0x6e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x6e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x1e,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x4e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x1e, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x13, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x40, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x13, 0x76, 0x65, 0x72, 0x73, 0x75, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73,
}

var (
	file_UserEventRanking_proto_rawDescOnce sync.Once
	file_UserEventRanking_proto_rawDescData = file_UserEventRanking_proto_rawDesc
)

func file_UserEventRanking_proto_rawDescGZIP() []byte {
	file_UserEventRanking_proto_rawDescOnce.Do(func() {
		file_UserEventRanking_proto_rawDescData = protoimpl.X.CompressGZIP(file_UserEventRanking_proto_rawDescData)
	})
	return file_UserEventRanking_proto_rawDescData
}

var file_UserEventRanking_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_UserEventRanking_proto_goTypes = []interface{}{
	(*UserDeck)(nil),                            // 0: UserDeck
	(*UserSituation)(nil),                       // 1: UserSituation
	(*UserProfileSituation)(nil),                // 2: UserProfileSituation
	(*UserProfileDegree)(nil),                   // 3: UserProfileDegree
	(*UserProfileDegreeMap)(nil),                // 4: UserProfileDegreeMap
	(*RankingUser)(nil),                         // 5: RankingUser
	(*RankingUserList)(nil),                     // 6: RankingUserList
	(*UserChallengeMusicRankingResponse)(nil),   // 7: UserChallengeMusicRankingResponse
	(*UserChallengeEventRankingResponse)(nil),   // 8: UserChallengeEventRankingResponse
	(*UserLiveTryEventRankingResponse)(nil),     // 9: UserLiveTryEventRankingResponse
	(*UserMissionLiveEventRankingResponse)(nil), // 10: UserMissionLiveEventRankingResponse
	(*UserVersusMusicRankingResponse)(nil),      // 11: UserVersusMusicRankingResponse
	(*UserVersusEventRankingResponse)(nil),      // 12: UserVersusEventRankingResponse
	nil,                                         // 13: UserProfileDegreeMap.EntriesEntry
}
var file_UserEventRanking_proto_depIdxs = []int32{
	13, // 0: UserProfileDegreeMap.entries:type_name -> UserProfileDegreeMap.EntriesEntry
	0,  // 1: RankingUser.userDeck:type_name -> UserDeck
	1,  // 2: RankingUser.userSituationList:type_name -> UserSituation
	2,  // 3: RankingUser.userProfileSituation:type_name -> UserProfileSituation
	4,  // 4: RankingUser.userProfileDegreeMap:type_name -> UserProfileDegreeMap
	5,  // 5: RankingUserList.entries:type_name -> RankingUser
	6,  // 6: UserChallengeMusicRankingResponse.scoreNearUsers:type_name -> RankingUserList
	6,  // 7: UserChallengeMusicRankingResponse.scoreTopUsers:type_name -> RankingUserList
	6,  // 8: UserChallengeEventRankingResponse.eventPointNearUsers:type_name -> RankingUserList
	6,  // 9: UserChallengeEventRankingResponse.eventPointTopUsers:type_name -> RankingUserList
	7,  // 10: UserChallengeEventRankingResponse.challengeMusicRankings:type_name -> UserChallengeMusicRankingResponse
	6,  // 11: UserLiveTryEventRankingResponse.nearUsers:type_name -> RankingUserList
	6,  // 12: UserLiveTryEventRankingResponse.topUsers:type_name -> RankingUserList
	6,  // 13: UserMissionLiveEventRankingResponse.nearUsers:type_name -> RankingUserList
	6,  // 14: UserMissionLiveEventRankingResponse.topUsers:type_name -> RankingUserList
	6,  // 15: UserVersusMusicRankingResponse.scoreNearUsers:type_name -> RankingUserList
	6,  // 16: UserVersusMusicRankingResponse.scoreTopUsers:type_name -> RankingUserList
	6,  // 17: UserVersusEventRankingResponse.eventPointNearUsers:type_name -> RankingUserList
	6,  // 18: UserVersusEventRankingResponse.eventPointTopUsers:type_name -> RankingUserList
	11, // 19: UserVersusEventRankingResponse.versusMusicRankings:type_name -> UserVersusMusicRankingResponse
	3,  // 20: UserProfileDegreeMap.EntriesEntry.value:type_name -> UserProfileDegree
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_UserEventRanking_proto_init() }
func file_UserEventRanking_proto_init() {
	if File_UserEventRanking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_UserEventRanking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSituation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileSituation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileDegree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileDegreeMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankingUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankingUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChallengeMusicRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChallengeEventRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLiveTryEventRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMissionLiveEventRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVersusMusicRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UserEventRanking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVersusEventRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UserEventRanking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UserEventRanking_proto_goTypes,
		DependencyIndexes: file_UserEventRanking_proto_depIdxs,
		MessageInfos:      file_UserEventRanking_proto_msgTypes,
	}.Build()
	File_UserEventRanking_proto = out.File
	file_UserEventRanking_proto_rawDesc = nil
	file_UserEventRanking_proto_goTypes = nil
	file_UserEventRanking_proto_depIdxs = nil
}
